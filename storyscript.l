%{
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include "parser.h" // Include the header file that will be generated by Bison

// Simple string buffer
char string_buffer[2048];
char *string_buffer_ptr;

// Error handling function
void yyerror(const char *s);

// Column tracking
int column = 1;

// Avoid compiler warnings
int yywrap(void) { return 1; }

// Update column position
#define YY_USER_ACTION column += yyleng;
%}

/* States for lexer */
%x STRING
%x COMMENT

/* Track line numbers */
%option yylineno

%%

"//".*      { /* Skip single line comments */ }
"/*"        { BEGIN(COMMENT); }
<COMMENT>"*/" { BEGIN(INITIAL); }
<COMMENT>\n { column = 1; yylineno++; }
<COMMENT>.  { /* Skip comment content */ }

"story"       { return STORY; }
"room"        { return ROOM; }
"title"       { return TITLE; }
"inventory"   { return INVENTORY; }
"item"        { return ITEM; }
"description" { return DESCRIPTION; }
"choice"      { return CHOICE; }
"option"      { return OPTION; }
"goto"        { return GOTO; }
":"           { return COLON; }
"{"           { return LBRACE; }
"}"           { return RBRACE; }
";"           { return SEMICOLON; }

[A-Za-z][A-Za-z0-9_]* { 
    yylval.string_val = strdup(yytext); 
    return IDENTIFIER; 
}

\"  {
    /* Start of a string */ 
    string_buffer_ptr = string_buffer; 
    BEGIN(STRING); 
}

<STRING>\"  { 
    /* End of a string */
    *string_buffer_ptr = '\0'; 
    yylval.string_val = strdup(string_buffer); 
    BEGIN(INITIAL); 
    return STRING_LITERAL; 
}

<STRING>\\n  { *string_buffer_ptr++ = '\n'; }
<STRING>\\t  { *string_buffer_ptr++ = '\t'; }
<STRING>\\\" { *string_buffer_ptr++ = '\"'; }
<STRING>\\\\ { *string_buffer_ptr++ = '\\'; }
<STRING>\\. { *string_buffer_ptr++ = yytext[1]; }

<STRING>[^\\\"]+ { 
    /* Copy string content */
    char *yptr = yytext;
    while (*yptr) {
        *string_buffer_ptr++ = *yptr++;
    }
}

\n      { column = 1; yylineno++; }
[ \t]+  { /* Skip other whitespace but update column */ }
\r      { /* Skip carriage return */ }

. { 
    yyerror("Invalid character"); 
}

%%